
    let
        // Load the Excel file
        Source_Excel_Dataset = Excel.Workbook(File.Contents("C:\\Users\\ksaik\\OneDrive\\Desktop\\bullet chart\\output\\combined_datasets.xlsx"), null, true),

        // Parameter for sheet selection
        SelectedSheetName = "",

        // Filter sheets of interest
        SelectedSheets = {"Button Swapping - KPI Icons", "Button Swapping - Product Grp &", "Orders_3759F66AE19340B5A44DC7B4", "Page Number", "People_4870DAF1D235439184C8F6F2", "Returns_053E5FFA429E451DBB90FE4", "Sales Data Extract", "Sales Data Extract_1"},
        FilteredSheets = Table.SelectRows(Source_Excel_Dataset, each List.Contains(SelectedSheets, [Name])),

        // Validate selected sheet exists
        TargetSheet = Table.SelectRows(FilteredSheets, each [Name] = SelectedSheetName),
        CheckSheet = if Table.IsEmpty(TargetSheet) then 
            error Error.Record(
                "Sheet not found", 
                "Available sheets: " & Text.Combine(FilteredSheets[Name], ", "), 
                [RequestedSheet = SelectedSheetName]
            )
        else TargetSheet,

        // Extract sheet data
        SheetData = try CheckSheet{0}[Data] otherwise error Error.Record(
            "Data extraction failed",
            "Verify sheet structure",
            [SheetName = SelectedSheetName, AvailableColumns = Table.ColumnNames(CheckSheet)]
        ),

        // Promote headers
        PromotedHeaders = Table.PromoteHeaders(SheetData, [PromoteAllScalars=true]),
        
        // Detect and apply column types dynamically
       ColumnsToTransform = Table.ColumnNames(PromotedHeaders),
    ChangedTypes = Table.TransformColumnTypes(
        PromotedHeaders,
        List.Transform(
            ColumnsToTransform,
            each {_, 
                let
                    SampleValue = List.First(Table.Column(PromotedHeaders, _), null),
                    TypeDetect = 
                        if SampleValue = null then type text
                        else if Value.Is(SampleValue, Number.Type) then
                            if Number.Round(SampleValue) = SampleValue then Int64.Type else type number
                        else if try Date.From(SampleValue) is date then type date
                        else if try DateTime.From(SampleValue) is datetime then type datetime
                        else type text
                in
                    TypeDetect
            }
            )
        ),

        // Clean data
        CleanedData = Table.SelectRows(ChangedTypes, each not List.Contains(Record.FieldValues(_), null)),
        FinalTable_Excel_Dataset = Table.Distinct(CleanedData)
    in
        FinalTable_Excel_Dataset
    